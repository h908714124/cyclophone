package com.github.cyclophone;

import java.util.Map;
import java.util.TreeMap;

import static com.github.cyclophone.Permutation.cycle;

/**
 * http://math.stanford.edu/~vakil/files/sixjan2308.pdf
 */
final class OuterAutomorphism {

  private static final Map<Permutation, Permutation> EXOTIC_MAP = createExoticMap();

  static Permutation exoticMap(Permutation p) {
    if (p.length() >= 7) {
      throw new IllegalArgumentException("outer map only works for permutations of rank 6");
    }
    return EXOTIC_MAP.get(p);
  }

  private static Map<Permutation, Permutation> createExoticMap() {
    Map<Permutation, Permutation> map = new TreeMap<>();
    map.put(cycle(1, 6).compose(cycle(2, 5)).compose(cycle(3, 4)), cycle(3, 6));
    map.put(cycle(1, 6, 2, 5).compose(cycle(3, 4)), cycle(1, 2).compose(cycle(3, 4, 6, 5)));
    map.put(cycle(1, 6).compose(cycle(2, 5, 3, 4)), cycle(1, 3, 5, 6).compose(cycle(2, 4)));
    map.put(cycle(1, 6, 3, 4, 2, 5), cycle(1, 4, 5).compose(cycle(2, 3)));
    map.put(cycle(1, 6, 2, 5, 3, 4), cycle(1, 5, 4).compose(cycle(2, 6)));
    map.put(cycle(1, 6, 3, 4).compose(cycle(2, 5)), cycle(1, 6, 4, 3).compose(cycle(2, 5)));
    map.put(cycle(1, 6).compose(cycle(2, 5)), cycle(1, 2).compose(cycle(4, 5)));
    map.put(cycle(1, 6, 2, 5), cycle(3, 5, 6, 4));
    map.put(cycle(1, 6).compose(cycle(2, 5, 4)), cycle(1, 6, 2, 5, 3, 4));
    map.put(cycle(1, 6, 4, 2, 5), cycle(1, 5, 2, 6, 3));
    map.put(cycle(1, 6, 2, 5, 4), cycle(1, 4, 2, 3, 6));
    map.put(cycle(1, 6, 4).compose(cycle(2, 5)), cycle(1, 3, 2, 4, 6, 5));
    map.put(cycle(1, 6).compose(cycle(2, 5, 3)), cycle(1, 4, 6, 5, 2, 3));
    map.put(cycle(1, 6, 3, 2, 5), cycle(1, 3, 6, 2, 4));
    map.put(cycle(1, 6).compose(cycle(2, 5, 4, 3)), cycle(1, 5).compose(cycle(2, 6, 4, 3)));
    map.put(cycle(1, 6, 4, 3, 2, 5), cycle(1, 6).compose(cycle(2, 5, 4)));
    map.put(cycle(1, 6, 3, 2, 5, 4), cycle(1, 2).compose(cycle(3, 5, 6)));
    map.put(cycle(1, 6, 4).compose(cycle(2, 5, 3)), cycle(3, 4, 5));
    map.put(cycle(1, 6, 2, 5, 3), cycle(1, 6, 3, 2, 5));
    map.put(cycle(1, 6, 3).compose(cycle(2, 5)), cycle(1, 5, 3, 4, 2, 6));
    map.put(cycle(1, 6, 2, 5, 4, 3), cycle(1, 3).compose(cycle(2, 4, 5)));
    map.put(cycle(1, 6, 4, 3).compose(cycle(2, 5)), cycle(1, 4).compose(cycle(2, 3, 5, 6)));
    map.put(cycle(1, 6, 3).compose(cycle(2, 5, 4)), cycle(4, 6, 5));
    map.put(cycle(1, 6, 4, 2, 5, 3), cycle(1, 2).compose(cycle(3, 6, 4)));
    map.put(cycle(1, 6).compose(cycle(2, 4, 3, 5)), cycle(1, 6, 5, 3).compose(cycle(2, 4)));
    map.put(cycle(1, 6, 2, 4, 3, 5), cycle(1, 4).compose(cycle(2, 6, 3)));
    map.put(cycle(1, 6).compose(cycle(2, 4)).compose(cycle(3, 5)), cycle(1, 5));
    map.put(cycle(1, 6, 3, 5).compose(cycle(2, 4)), cycle(1, 2, 5, 6).compose(cycle(3, 4)));
    map.put(cycle(1, 6, 2, 4).compose(cycle(3, 5)), cycle(1, 3, 5, 2).compose(cycle(4, 6)));
    map.put(cycle(1, 6, 3, 5, 2, 4), cycle(2, 3, 6).compose(cycle(4, 5)));
    map.put(cycle(1, 6).compose(cycle(2, 4, 5)), cycle(1, 4, 3, 5, 2, 6));
    map.put(cycle(1, 6, 2, 4, 5), cycle(1, 6, 2, 4, 5));
    map.put(cycle(1, 6).compose(cycle(2, 4)), cycle(2, 3).compose(cycle(4, 6)));
    map.put(cycle(1, 6, 5).compose(cycle(2, 4)), cycle(1, 3, 6, 5, 4, 2));
    map.put(cycle(1, 6, 2, 4), cycle(1, 2, 5, 3));
    map.put(cycle(1, 6, 5, 2, 4), cycle(1, 5, 6, 3, 4));
    map.put(cycle(1, 6).compose(cycle(2, 4, 5, 3)), cycle(1, 2, 5, 4).compose(cycle(3, 6)));
    map.put(cycle(1, 6, 3, 2, 4, 5), cycle(1, 5, 3).compose(cycle(4, 6)));
    map.put(cycle(1, 6).compose(cycle(2, 4, 3)), cycle(1, 3, 4, 5, 6, 2));
    map.put(cycle(1, 6, 5).compose(cycle(2, 4, 3)), cycle(2, 3, 5));
    map.put(cycle(1, 6, 3, 2, 4), cycle(1, 4, 2, 6, 5));
    map.put(cycle(1, 6, 5, 3, 2, 4), cycle(1, 6).compose(cycle(2, 4, 3)));
    map.put(cycle(1, 6, 2, 4, 5, 3), cycle(2, 3, 4).compose(cycle(5, 6)));
    map.put(cycle(1, 6, 3).compose(cycle(2, 4, 5)), cycle(1, 3, 2));
    map.put(cycle(1, 6, 2, 4, 3), cycle(1, 5, 4, 3, 6));
    map.put(cycle(1, 6, 5, 2, 4, 3), cycle(1, 2, 5).compose(cycle(4, 6)));
    map.put(cycle(1, 6, 3).compose(cycle(2, 4)), cycle(1, 6, 3, 5, 2, 4));
    map.put(cycle(1, 6, 5, 3).compose(cycle(2, 4)), cycle(1, 4, 5, 3).compose(cycle(2, 6)));
    map.put(cycle(1, 6).compose(cycle(2, 3, 5)), cycle(1, 3, 2, 5, 6, 4));
    map.put(cycle(1, 6, 2, 3, 5), cycle(1, 5, 4, 2, 3));
    map.put(cycle(1, 6).compose(cycle(2, 3, 5, 4)), cycle(1, 4, 5, 2).compose(cycle(3, 6)));
    map.put(cycle(1, 6, 4, 2, 3, 5), cycle(2, 4, 6).compose(cycle(3, 5)));
    map.put(cycle(1, 6, 2, 3, 5, 4), cycle(1, 6, 5).compose(cycle(3, 4)));
    map.put(cycle(1, 6, 4).compose(cycle(2, 3, 5)), cycle(1, 2, 6));
    map.put(cycle(1, 6).compose(cycle(2, 3, 4, 5)), cycle(1, 5).compose(cycle(2, 3, 4, 6)));
    map.put(cycle(1, 6, 2, 3, 4, 5), cycle(1, 3, 6).compose(cycle(2, 5)));
    map.put(cycle(1, 6).compose(cycle(2, 3, 4)), cycle(1, 2, 6, 5, 4, 3));
    map.put(cycle(1, 6, 5).compose(cycle(2, 3, 4)), cycle(1, 6, 4));
    map.put(cycle(1, 6, 2, 3, 4), cycle(2, 4, 5, 6, 3));
    map.put(cycle(1, 6, 5, 2, 3, 4), cycle(1, 4, 2).compose(cycle(3, 5)));
    map.put(cycle(1, 6).compose(cycle(2, 3)).compose(cycle(4, 5)), cycle(2, 4));
    map.put(cycle(1, 6, 4, 5).compose(cycle(2, 3)), cycle(1, 4, 3, 2).compose(cycle(5, 6)));
    map.put(cycle(1, 6).compose(cycle(2, 3)), cycle(1, 6).compose(cycle(3, 5)));
    map.put(cycle(1, 6, 5).compose(cycle(2, 3)), cycle(1, 2, 6, 3, 4, 5));
    map.put(cycle(1, 6, 4).compose(cycle(2, 3)), cycle(1, 5, 2, 3, 6, 4));
    map.put(cycle(1, 6, 5, 4).compose(cycle(2, 3)), cycle(1, 3).compose(cycle(2, 5, 4, 6)));
    map.put(cycle(1, 6, 2, 3).compose(cycle(4, 5)), cycle(1, 2, 6, 4).compose(cycle(3, 5)));
    map.put(cycle(1, 6, 4, 5, 2, 3), cycle(1, 6, 3).compose(cycle(4, 5)));
    map.put(cycle(1, 6, 2, 3), cycle(1, 4, 6, 2));
    map.put(cycle(1, 6, 5, 2, 3), cycle(2, 4, 3, 6, 5));
    map.put(cycle(1, 6, 4, 2, 3), cycle(1, 3, 4, 2, 5));
    map.put(cycle(1, 6, 5, 4, 2, 3), cycle(1, 5, 6).compose(cycle(2, 3)));
    map.put(cycle(1, 6).compose(cycle(3, 5)), cycle(2, 6).compose(cycle(3, 4)));
    map.put(cycle(1, 6, 3, 5), cycle(1, 6, 5, 2));
    map.put(cycle(1, 6).compose(cycle(3, 5, 4)), cycle(1, 2, 3, 5, 4, 6));
    map.put(cycle(1, 6, 4, 3, 5), cycle(1, 3, 6, 4, 5));
    map.put(cycle(1, 6, 3, 5, 4), cycle(1, 5, 3, 2, 4));
    map.put(cycle(1, 6, 4).compose(cycle(3, 5)), cycle(1, 4, 2, 5, 6, 3));
    map.put(cycle(1, 6).compose(cycle(3, 4, 5)), cycle(1, 6, 4, 5, 3, 2));
    map.put(cycle(1, 6, 3, 4, 5), cycle(2, 6, 3, 5, 4));
    map.put(cycle(1, 6).compose(cycle(3, 4)), cycle(1, 4).compose(cycle(2, 5)));
    map.put(cycle(1, 6, 5).compose(cycle(3, 4)), cycle(1, 5, 6, 2, 4, 3));
    map.put(cycle(1, 6, 3, 4), cycle(1, 3, 4, 6));
    map.put(cycle(1, 6, 5, 3, 4), cycle(1, 2, 3, 6, 5));
    map.put(cycle(1, 6).compose(cycle(4, 5)), cycle(1, 3).compose(cycle(5, 6)));
    map.put(cycle(1, 6, 4, 5), cycle(1, 2, 3, 4));
    map.put(cycle(1, 6), cycle(1, 5).compose(cycle(2, 4)).compose(cycle(3, 6)));
    map.put(cycle(1, 6, 5), cycle(1, 4, 6).compose(cycle(2, 5, 3)));
    map.put(cycle(1, 6, 4), cycle(1, 6, 2).compose(cycle(3, 5, 4)));
    map.put(cycle(1, 6, 5, 4), cycle(2, 6, 4, 5));
    map.put(cycle(1, 6, 3).compose(cycle(4, 5)), cycle(1, 4, 3, 6, 2, 5));
    map.put(cycle(1, 6, 4, 5, 3), cycle(1, 5, 2, 4, 6));
    map.put(cycle(1, 6, 3), cycle(1, 2, 3).compose(cycle(4, 5, 6)));
    map.put(cycle(1, 6, 5, 3), cycle(1, 3, 5, 4));
    map.put(cycle(1, 6, 4, 3), cycle(2, 6, 5, 3));
    map.put(cycle(1, 6, 5, 4, 3), cycle(1, 6, 3, 4, 2));
    map.put(cycle(1, 6, 2).compose(cycle(3, 5)), cycle(1, 2, 4, 5, 3, 6));
    map.put(cycle(1, 6, 3, 5, 2), cycle(1, 4, 6, 3, 5));
    map.put(cycle(1, 6, 2).compose(cycle(3, 5, 4)), cycle(2, 5, 6));
    map.put(cycle(1, 6, 4, 3, 5, 2), cycle(1, 5, 2).compose(cycle(3, 4)));
    map.put(cycle(1, 6, 3, 5, 4, 2), cycle(1, 3).compose(cycle(2, 6, 4)));
    map.put(cycle(1, 6, 4, 2).compose(cycle(3, 5)), cycle(1, 6, 5, 4).compose(cycle(2, 3)));
    map.put(cycle(1, 6, 2).compose(cycle(3, 4, 5)), cycle(1, 4, 3));
    map.put(cycle(1, 6, 3, 4, 5, 2), cycle(1, 2, 4).compose(cycle(5, 6)));
    map.put(cycle(1, 6, 2).compose(cycle(3, 4)), cycle(1, 6, 4, 2, 3, 5));
    map.put(cycle(1, 6, 5, 2).compose(cycle(3, 4)), cycle(1, 3, 2, 6).compose(cycle(4, 5)));
    map.put(cycle(1, 6, 3, 4, 2), cycle(1, 5, 3, 6, 2));
    map.put(cycle(1, 6, 5, 3, 4, 2), cycle(2, 5).compose(cycle(3, 4, 6)));
    map.put(cycle(1, 6, 2).compose(cycle(4, 5)), cycle(1, 5, 4, 6, 3, 2));
    map.put(cycle(1, 6, 4, 5, 2), cycle(2, 5, 3, 6, 4));
    map.put(cycle(1, 6, 2), cycle(1, 3, 4).compose(cycle(2, 6, 5)));
    map.put(cycle(1, 6, 5, 2), cycle(1, 6, 2, 3));
    map.put(cycle(1, 6, 4, 2), cycle(1, 4, 5, 6));
    map.put(cycle(1, 6, 5, 4, 2), cycle(1, 2, 4, 3, 5));
    map.put(cycle(1, 6, 3, 2).compose(cycle(4, 5)), cycle(1, 6).compose(cycle(2, 3, 4, 5)));
    map.put(cycle(1, 6, 4, 5, 3, 2), cycle(1, 3, 5).compose(cycle(2, 6)));
    map.put(cycle(1, 6, 3, 2), cycle(2, 5, 4, 3));
    map.put(cycle(1, 6, 5, 3, 2), cycle(1, 5, 6, 4, 2));
    map.put(cycle(1, 6, 4, 3, 2), cycle(1, 2, 4, 6, 3));
    map.put(cycle(1, 6, 5, 4, 3, 2), cycle(1, 4).compose(cycle(3, 6, 5)));
    map.put(cycle(1, 5, 2, 6).compose(cycle(3, 4)), cycle(1, 2).compose(cycle(3, 5, 6, 4)));
    map.put(cycle(1, 5).compose(cycle(2, 6)).compose(cycle(3, 4)), cycle(4, 5));
    map.put(cycle(1, 5, 3, 4, 2, 6), cycle(1, 4).compose(cycle(2, 3, 6)));
    map.put(cycle(1, 5).compose(cycle(2, 6, 3, 4)), cycle(1, 3).compose(cycle(2, 4, 6, 5)));
    map.put(cycle(1, 5, 3, 4).compose(cycle(2, 6)), cycle(1, 6).compose(cycle(2, 5, 3, 4)));
    map.put(cycle(1, 5, 2, 6, 3, 4), cycle(1, 5).compose(cycle(2, 6, 3)));
    map.put(cycle(1, 5, 2, 6), cycle(3, 4, 6, 5));
    map.put(cycle(1, 5).compose(cycle(2, 6)), cycle(1, 2).compose(cycle(3, 6)));
    map.put(cycle(1, 5, 4, 2, 6), cycle(1, 5, 4, 2, 6));
    map.put(cycle(1, 5).compose(cycle(2, 6, 4)), cycle(1, 6, 4, 3, 2, 5));
    map.put(cycle(1, 5, 4).compose(cycle(2, 6)), cycle(1, 3, 5, 6, 2, 4));
    map.put(cycle(1, 5, 2, 6, 4), cycle(1, 4, 5, 2, 3));
    map.put(cycle(1, 5, 3, 2, 6), cycle(1, 3, 2, 4, 5));
    map.put(cycle(1, 5).compose(cycle(2, 6, 3)), cycle(1, 4, 2, 3, 5, 6));
    map.put(cycle(1, 5, 4, 3, 2, 6), cycle(1, 6, 3).compose(cycle(2, 5)));
    map.put(cycle(1, 5).compose(cycle(2, 6, 4, 3)), cycle(1, 5, 3, 4).compose(cycle(2, 6)));
    map.put(cycle(1, 5, 4).compose(cycle(2, 6, 3)), cycle(3, 6, 4));
    map.put(cycle(1, 5, 3, 2, 6, 4), cycle(1, 2).compose(cycle(4, 6, 5)));
    map.put(cycle(1, 5, 3).compose(cycle(2, 6)), cycle(1, 5, 2, 6, 4, 3));
    map.put(cycle(1, 5, 2, 6, 3), cycle(1, 6, 2, 5, 4));
    map.put(cycle(1, 5, 4, 3).compose(cycle(2, 6)), cycle(1, 4, 6, 5).compose(cycle(2, 3)));
    map.put(cycle(1, 5, 2, 6, 4, 3), cycle(1, 3, 6).compose(cycle(2, 4)));
    map.put(cycle(1, 5, 4, 2, 6, 3), cycle(1, 2).compose(cycle(3, 4, 5)));
    map.put(cycle(1, 5, 3).compose(cycle(2, 6, 4)), cycle(3, 5, 6));
    map.put(cycle(1, 5, 2, 4, 3, 6), cycle(1, 5, 4).compose(cycle(2, 3)));
    map.put(cycle(1, 5).compose(cycle(2, 4, 3, 6)), cycle(1, 3).compose(cycle(2, 5, 6, 4)));
    map.put(cycle(1, 5, 3, 6).compose(cycle(2, 4)), cycle(1, 6, 5, 2).compose(cycle(3, 4)));
    map.put(cycle(1, 5).compose(cycle(2, 4)).compose(cycle(3, 6)), cycle(2, 6));
    map.put(cycle(1, 5, 3, 6, 2, 4), cycle(1, 4, 5).compose(cycle(3, 6)));
    map.put(cycle(1, 5, 2, 4).compose(cycle(3, 6)), cycle(1, 2, 4, 6).compose(cycle(3, 5)));
    map.put(cycle(1, 5, 2, 4, 6), cycle(1, 3, 6, 2, 5));
    map.put(cycle(1, 5).compose(cycle(2, 4, 6)), cycle(1, 5, 2, 3, 4, 6));
    map.put(cycle(1, 5, 6).compose(cycle(2, 4)), cycle(1, 2, 4, 5, 6, 3));
    map.put(cycle(1, 5).compose(cycle(2, 4)), cycle(1, 4).compose(cycle(3, 5)));
    map.put(cycle(1, 5, 6, 2, 4), cycle(2, 6, 5, 4, 3));
    map.put(cycle(1, 5, 2, 4), cycle(1, 6, 4, 2));
    map.put(cycle(1, 5, 3, 2, 4, 6), cycle(2, 6, 4).compose(cycle(3, 5)));
    map.put(cycle(1, 5).compose(cycle(2, 4, 6, 3)), cycle(1, 6, 3, 2).compose(cycle(4, 5)));
    map.put(cycle(1, 5, 6).compose(cycle(2, 4, 3)), cycle(1, 4, 6));
    map.put(cycle(1, 5).compose(cycle(2, 4, 3)), cycle(1, 2, 4, 3, 6, 5));
    map.put(cycle(1, 5, 6, 3, 2, 4), cycle(1, 3, 4).compose(cycle(2, 5)));
    map.put(cycle(1, 5, 3, 2, 4), cycle(1, 5, 6, 2, 3));
    map.put(cycle(1, 5, 3).compose(cycle(2, 4, 6)), cycle(1, 2, 4));
    map.put(cycle(1, 5, 2, 4, 6, 3), cycle(1, 4, 3).compose(cycle(5, 6)));
    map.put(cycle(1, 5, 6, 2, 4, 3), cycle(1, 6, 2).compose(cycle(3, 5)));
    map.put(cycle(1, 5, 2, 4, 3), cycle(2, 6, 3, 4, 5));
    map.put(cycle(1, 5, 6, 3).compose(cycle(2, 4)), cycle(1, 5).compose(cycle(2, 3, 6, 4)));
    map.put(cycle(1, 5, 3).compose(cycle(2, 4)), cycle(1, 3, 2, 5, 4, 6));
    map.put(cycle(1, 5, 2, 3, 6), cycle(1, 4, 2, 6, 3));
    map.put(cycle(1, 5).compose(cycle(2, 3, 6)), cycle(1, 6, 5, 3, 2, 4));
    map.put(cycle(1, 5, 4, 2, 3, 6), cycle(1, 3, 5).compose(cycle(4, 6)));
    map.put(cycle(1, 5).compose(cycle(2, 3, 6, 4)), cycle(1, 2, 3, 6).compose(cycle(4, 5)));
    map.put(cycle(1, 5, 4).compose(cycle(2, 3, 6)), cycle(1, 5, 2));
    map.put(cycle(1, 5, 2, 3, 6, 4), cycle(2, 5, 6).compose(cycle(3, 4)));
    map.put(cycle(1, 5, 2, 3, 4, 6), cycle(1, 6).compose(cycle(2, 4, 5)));
    map.put(cycle(1, 5).compose(cycle(2, 3, 4, 6)), cycle(1, 4, 3, 5).compose(cycle(2, 6)));
    map.put(cycle(1, 5, 6).compose(cycle(2, 3, 4)), cycle(2, 5, 3));
    map.put(cycle(1, 5).compose(cycle(2, 3, 4)), cycle(1, 5, 6, 3, 4, 2));
    map.put(cycle(1, 5, 6, 2, 3, 4), cycle(1, 2, 3).compose(cycle(4, 6)));
    map.put(cycle(1, 5, 2, 3, 4), cycle(1, 3, 6, 5, 4));
    map.put(cycle(1, 5, 4, 6).compose(cycle(2, 3)), cycle(1, 2, 3, 4).compose(cycle(5, 6)));
    map.put(cycle(1, 5).compose(cycle(2, 3)).compose(cycle(4, 6)), cycle(1, 3));
    map.put(cycle(1, 5, 6).compose(cycle(2, 3)), cycle(1, 5, 4, 3, 6, 2));
    map.put(cycle(1, 5).compose(cycle(2, 3)), cycle(2, 5).compose(cycle(4, 6)));
    map.put(cycle(1, 5, 6, 4).compose(cycle(2, 3)), cycle(1, 6, 3, 5).compose(cycle(2, 4)));
    map.put(cycle(1, 5, 4).compose(cycle(2, 3)), cycle(1, 4, 5, 3, 2, 6));
    map.put(cycle(1, 5, 4, 6, 2, 3), cycle(2, 5, 4).compose(cycle(3, 6)));
    map.put(cycle(1, 5, 2, 3).compose(cycle(4, 6)), cycle(1, 5, 3, 2).compose(cycle(4, 6)));
    map.put(cycle(1, 5, 6, 2, 3), cycle(1, 3, 4, 5, 6));
    map.put(cycle(1, 5, 2, 3), cycle(1, 2, 3, 5));
    map.put(cycle(1, 5, 6, 4, 2, 3), cycle(1, 4).compose(cycle(2, 6, 5)));
    map.put(cycle(1, 5, 4, 2, 3), cycle(1, 6, 2, 4, 3));
    map.put(cycle(1, 5, 3, 6), cycle(1, 2, 5, 6));
    map.put(cycle(1, 5).compose(cycle(3, 6)), cycle(1, 5).compose(cycle(3, 4)));
    map.put(cycle(1, 5, 4, 3, 6), cycle(2, 4, 5, 3, 6));
    map.put(cycle(1, 5).compose(cycle(3, 6, 4)), cycle(1, 4, 6, 3, 5, 2));
    map.put(cycle(1, 5, 4).compose(cycle(3, 6)), cycle(1, 6, 5, 4, 2, 3));
    map.put(cycle(1, 5, 3, 6, 4), cycle(1, 3, 2, 6, 4));
    map.put(cycle(1, 5, 3, 4, 6), cycle(1, 5, 4, 6, 3));
    map.put(cycle(1, 5).compose(cycle(3, 4, 6)), cycle(1, 2, 5, 3, 6, 4));
    map.put(cycle(1, 5, 6).compose(cycle(3, 4)), cycle(1, 3, 4, 2, 6, 5));
    map.put(cycle(1, 5).compose(cycle(3, 4)), cycle(1, 6).compose(cycle(2, 3)));
    map.put(cycle(1, 5, 6, 3, 4), cycle(1, 4, 5, 6, 2));
    map.put(cycle(1, 5, 3, 4), cycle(2, 4, 3, 5));
    map.put(cycle(1, 5, 4, 6), cycle(1, 4, 3, 2));
    map.put(cycle(1, 5).compose(cycle(4, 6)), cycle(2, 4).compose(cycle(5, 6)));
    map.put(cycle(1, 5, 6), cycle(1, 6, 4).compose(cycle(2, 3, 5)));
    map.put(cycle(1, 5), cycle(1, 3).compose(cycle(2, 6)).compose(cycle(4, 5)));
    map.put(cycle(1, 5, 6, 4), cycle(1, 5, 3, 6));
    map.put(cycle(1, 5, 4), cycle(1, 2, 5).compose(cycle(3, 4, 6)));
    map.put(cycle(1, 5, 4, 6, 3), cycle(1, 3, 5, 2, 6));
    map.put(cycle(1, 5, 3).compose(cycle(4, 6)), cycle(1, 6, 2, 3, 4, 5));
    map.put(cycle(1, 5, 6, 3), cycle(2, 4, 6, 3));
    map.put(cycle(1, 5, 3), cycle(1, 4, 2).compose(cycle(3, 6, 5)));
    map.put(cycle(1, 5, 6, 4, 3), cycle(1, 2, 5, 4, 3));
    map.put(cycle(1, 5, 4, 3), cycle(1, 5, 6, 4));
    map.put(cycle(1, 5, 3, 6, 2), cycle(2, 3, 5, 4, 6));
    map.put(cycle(1, 5, 2).compose(cycle(3, 6)), cycle(1, 3, 6, 4, 5, 2));
    map.put(cycle(1, 5, 4, 3, 6, 2), cycle(1, 2, 6).compose(cycle(3, 4)));
    map.put(cycle(1, 5, 2).compose(cycle(3, 6, 4)), cycle(1, 6, 5));
    map.put(cycle(1, 5, 4, 2).compose(cycle(3, 6)), cycle(1, 4).compose(cycle(2, 5, 6, 3)));
    map.put(cycle(1, 5, 3, 6, 4, 2), cycle(1, 5, 3).compose(cycle(2, 4)));
    map.put(cycle(1, 5, 3, 4, 6, 2), cycle(1, 3, 2).compose(cycle(5, 6)));
    map.put(cycle(1, 5, 2).compose(cycle(3, 4, 6)), cycle(2, 3, 4));
    map.put(cycle(1, 5, 6, 2).compose(cycle(3, 4)), cycle(1, 5, 2, 4).compose(cycle(3, 6)));
    map.put(cycle(1, 5, 2).compose(cycle(3, 4)), cycle(1, 4, 6, 2, 5, 3));
    map.put(cycle(1, 5, 6, 3, 4, 2), cycle(1, 6).compose(cycle(3, 5, 4)));
    map.put(cycle(1, 5, 3, 4, 2), cycle(1, 2, 6, 4, 5));
    map.put(cycle(1, 5, 4, 6, 2), cycle(1, 6, 4, 5, 3));
    map.put(cycle(1, 5, 2).compose(cycle(4, 6)), cycle(1, 2, 6, 3, 5, 4));
    map.put(cycle(1, 5, 6, 2), cycle(1, 4, 2, 5));
    map.put(cycle(1, 5, 2), cycle(1, 5, 6).compose(cycle(2, 4, 3)));
    map.put(cycle(1, 5, 6, 4, 2), cycle(1, 3, 4, 6, 2));
    map.put(cycle(1, 5, 4, 2), cycle(2, 3, 6, 5));
    map.put(cycle(1, 5, 4, 6, 3, 2), cycle(1, 5).compose(cycle(2, 4, 6)));
    map.put(cycle(1, 5, 3, 2).compose(cycle(4, 6)), cycle(1, 4, 3, 6).compose(cycle(2, 5)));
    map.put(cycle(1, 5, 6, 3, 2), cycle(1, 2, 6, 5, 3));
    map.put(cycle(1, 5, 3, 2), cycle(1, 6, 3, 4));
    map.put(cycle(1, 5, 6, 4, 3, 2), cycle(2, 3).compose(cycle(4, 5, 6)));
    map.put(cycle(1, 5, 4, 3, 2), cycle(1, 3, 5, 4, 2));
    map.put(cycle(1, 4, 3, 5, 2, 6), cycle(1, 4, 5).compose(cycle(2, 6)));
    map.put(cycle(1, 4, 3, 5).compose(cycle(2, 6)), cycle(1, 6).compose(cycle(2, 4, 3, 5)));
    map.put(cycle(1, 4, 2, 6).compose(cycle(3, 5)), cycle(1, 2, 5, 3).compose(cycle(4, 6)));
    map.put(cycle(1, 4, 2, 6, 3, 5), cycle(1, 5, 4).compose(cycle(3, 6)));
    map.put(cycle(1, 4).compose(cycle(2, 6)).compose(cycle(3, 5)), cycle(2, 3));
    map.put(cycle(1, 4).compose(cycle(2, 6, 3, 5)), cycle(1, 3, 4, 2).compose(cycle(5, 6)));
    map.put(cycle(1, 4, 5, 2, 6), cycle(1, 6, 3, 2, 4));
    map.put(cycle(1, 4, 5).compose(cycle(2, 6)), cycle(1, 4, 2, 6, 5, 3));
    map.put(cycle(1, 4, 2, 6), cycle(1, 3, 5, 2));
    map.put(cycle(1, 4, 2, 6, 5), cycle(2, 3, 4, 5, 6));
    map.put(cycle(1, 4).compose(cycle(2, 6)), cycle(1, 5).compose(cycle(4, 6)));
    map.put(cycle(1, 4).compose(cycle(2, 6, 5)), cycle(1, 2, 5, 4, 3, 6));
    map.put(cycle(1, 4, 5, 3, 2, 6), cycle(1, 5, 6).compose(cycle(3, 4)));
    map.put(cycle(1, 4, 5).compose(cycle(2, 6, 3)), cycle(1, 2, 5));
    map.put(cycle(1, 4, 3, 2, 6), cycle(2, 3, 6, 5, 4));
    map.put(cycle(1, 4, 3, 2, 6, 5), cycle(1, 3, 2).compose(cycle(4, 6)));
    map.put(cycle(1, 4).compose(cycle(2, 6, 3)), cycle(1, 6, 2, 4, 5, 3));
    map.put(cycle(1, 4).compose(cycle(2, 6, 5, 3)), cycle(1, 4).compose(cycle(2, 6, 3, 5)));
    map.put(cycle(1, 4, 5, 3).compose(cycle(2, 6)), cycle(1, 3, 6, 2).compose(cycle(4, 5)));
    map.put(cycle(1, 4, 5, 2, 6, 3), cycle(2, 3, 5).compose(cycle(4, 6)));
    map.put(cycle(1, 4, 3).compose(cycle(2, 6)), cycle(1, 2, 5, 6, 3, 4));
    map.put(cycle(1, 4, 3).compose(cycle(2, 6, 5)), cycle(1, 5, 3));
    map.put(cycle(1, 4, 2, 6, 3), cycle(1, 4, 3, 2, 6));
    map.put(cycle(1, 4, 2, 6, 5, 3), cycle(1, 6, 5).compose(cycle(2, 4)));
    map.put(cycle(1, 4, 3, 6).compose(cycle(2, 5)), cycle(1, 3, 4, 6).compose(cycle(2, 5)));
    map.put(cycle(1, 4, 3, 6, 2, 5), cycle(1, 5).compose(cycle(2, 3, 6)));
    map.put(cycle(1, 4, 2, 5, 3, 6), cycle(2, 6, 3).compose(cycle(4, 5)));
    map.put(cycle(1, 4, 2, 5).compose(cycle(3, 6)), cycle(1, 6, 4, 2).compose(cycle(3, 5)));
    map.put(cycle(1, 4).compose(cycle(2, 5, 3, 6)), cycle(1, 2, 4, 3).compose(cycle(5, 6)));
    map.put(cycle(1, 4).compose(cycle(2, 5)).compose(cycle(3, 6)), cycle(1, 4));
    map.put(cycle(1, 4, 6).compose(cycle(2, 5)), cycle(1, 5, 6, 4, 2, 3));
    map.put(cycle(1, 4, 6, 2, 5), cycle(1, 3, 2, 5, 4));
    map.put(cycle(1, 4, 2, 5, 6), cycle(1, 4, 3, 6, 5));
    map.put(cycle(1, 4, 2, 5), cycle(1, 2, 4, 6));
    map.put(cycle(1, 4).compose(cycle(2, 5, 6)), cycle(1, 6, 3, 4, 5, 2));
    map.put(cycle(1, 4).compose(cycle(2, 5)), cycle(2, 6).compose(cycle(3, 5)));
    map.put(cycle(1, 4, 6).compose(cycle(2, 5, 3)), cycle(1, 6, 2));
    map.put(cycle(1, 4, 6, 3, 2, 5), cycle(2, 6, 5).compose(cycle(3, 4)));
    map.put(cycle(1, 4, 3, 2, 5, 6), cycle(1, 2, 4).compose(cycle(3, 5)));
    map.put(cycle(1, 4, 3, 2, 5), cycle(1, 4, 5, 6, 3));
    map.put(cycle(1, 4).compose(cycle(2, 5, 6, 3)), cycle(1, 5, 4, 6).compose(cycle(2, 3)));
    map.put(cycle(1, 4).compose(cycle(2, 5, 3)), cycle(1, 3, 6, 4, 2, 5));
    map.put(cycle(1, 4, 6, 2, 5, 3), cycle(1, 4, 6).compose(cycle(3, 5)));
    map.put(cycle(1, 4, 6, 3).compose(cycle(2, 5)), cycle(1, 2, 4, 5).compose(cycle(3, 6)));
    map.put(cycle(1, 4, 3).compose(cycle(2, 5, 6)), cycle(2, 6, 4));
    map.put(cycle(1, 4, 3).compose(cycle(2, 5)), cycle(1, 6, 5, 4, 3, 2));
    map.put(cycle(1, 4, 2, 5, 6, 3), cycle(1, 3).compose(cycle(2, 5, 6)));
    map.put(cycle(1, 4, 2, 5, 3), cycle(1, 5, 2, 3, 4));
    map.put(cycle(1, 4, 5, 2, 3, 6), cycle(1, 2).compose(cycle(3, 6, 5)));
    map.put(cycle(1, 4, 5).compose(cycle(2, 3, 6)), cycle(3, 4, 6));
    map.put(cycle(1, 4, 2, 3, 6), cycle(1, 5, 6, 2, 4));
    map.put(cycle(1, 4, 2, 3, 6, 5), cycle(1, 4, 3).compose(cycle(2, 5)));
    map.put(cycle(1, 4).compose(cycle(2, 3, 6)), cycle(1, 3, 5, 4, 2, 6));
    map.put(cycle(1, 4).compose(cycle(2, 3, 6, 5)), cycle(1, 6, 4, 5).compose(cycle(2, 3)));
    map.put(cycle(1, 4, 6).compose(cycle(2, 3, 5)), cycle(3, 5, 4));
    map.put(cycle(1, 4, 6, 2, 3, 5), cycle(1, 2).compose(cycle(4, 5, 6)));
    map.put(cycle(1, 4, 2, 3, 5, 6), cycle(1, 6).compose(cycle(2, 3, 4)));
    map.put(cycle(1, 4, 2, 3, 5), cycle(1, 3, 2, 6, 5));
    map.put(cycle(1, 4).compose(cycle(2, 3, 5, 6)), cycle(1, 4).compose(cycle(2, 5, 3, 6)));
    map.put(cycle(1, 4).compose(cycle(2, 3, 5)), cycle(1, 5, 2, 4, 6, 3));
    map.put(cycle(1, 4, 6).compose(cycle(2, 3)), cycle(1, 4, 6, 3, 2, 5));
    map.put(cycle(1, 4, 6, 5).compose(cycle(2, 3)), cycle(1, 5, 3, 6).compose(cycle(2, 4)));
    map.put(cycle(1, 4, 5, 6).compose(cycle(2, 3)), cycle(1, 3).compose(cycle(2, 6, 4, 5)));
    map.put(cycle(1, 4, 5).compose(cycle(2, 3)), cycle(1, 6, 2, 3, 5, 4));
    map.put(cycle(1, 4).compose(cycle(2, 3)).compose(cycle(5, 6)), cycle(5, 6));
    map.put(cycle(1, 4).compose(cycle(2, 3)), cycle(1, 2).compose(cycle(3, 4)));
    map.put(cycle(1, 4, 6, 2, 3), cycle(1, 6, 5, 2, 3));
    map.put(cycle(1, 4, 6, 5, 2, 3), cycle(1, 3, 4).compose(cycle(2, 6)));
    map.put(cycle(1, 4, 5, 6, 2, 3), cycle(1, 5).compose(cycle(2, 4, 3)));
    map.put(cycle(1, 4, 5, 2, 3), cycle(1, 4, 2, 5, 6));
    map.put(cycle(1, 4, 2, 3).compose(cycle(5, 6)), cycle(1, 2).compose(cycle(3, 5, 4, 6)));
    map.put(cycle(1, 4, 2, 3), cycle(3, 6, 4, 5));
    map.put(cycle(1, 4, 5, 3, 6), cycle(1, 4, 2, 3, 5));
    map.put(cycle(1, 4, 5).compose(cycle(3, 6)), cycle(1, 3, 2, 4, 5, 6));
    map.put(cycle(1, 4, 3, 6), cycle(1, 6, 4, 3));
    map.put(cycle(1, 4, 3, 6, 5), cycle(1, 2, 6, 5, 4));
    map.put(cycle(1, 4).compose(cycle(3, 6)), cycle(2, 5).compose(cycle(3, 6)));
    map.put(cycle(1, 4).compose(cycle(3, 6, 5)), cycle(1, 5, 3, 4, 6, 2));
    map.put(cycle(1, 4, 6).compose(cycle(3, 5)), cycle(1, 3, 6, 5, 2, 4));
    map.put(cycle(1, 4, 6, 3, 5), cycle(1, 4, 6, 2, 3));
    map.put(cycle(1, 4, 3, 5, 6), cycle(1, 5, 6, 3, 2));
    map.put(cycle(1, 4, 3, 5), cycle(2, 5, 3, 4));
    map.put(cycle(1, 4).compose(cycle(3, 5, 6)), cycle(1, 2, 6, 4, 3, 5));
    map.put(cycle(1, 4).compose(cycle(3, 5)), cycle(1, 6).compose(cycle(4, 5)));
    map.put(cycle(1, 4, 6), cycle(1, 2, 6).compose(cycle(3, 4, 5)));
    map.put(cycle(1, 4, 6, 5), cycle(1, 6, 3, 5));
    map.put(cycle(1, 4, 5, 6), cycle(2, 5, 4, 6));
    map.put(cycle(1, 4, 5), cycle(1, 5, 2).compose(cycle(3, 6, 4)));
    map.put(cycle(1, 4).compose(cycle(5, 6)), cycle(1, 3).compose(cycle(2, 4)));
    map.put(cycle(1, 4), cycle(1, 4).compose(cycle(2, 3)).compose(cycle(5, 6)));
    map.put(cycle(1, 4, 6, 3), cycle(1, 5, 4, 2));
    map.put(cycle(1, 4, 6, 5, 3), cycle(2, 5, 6, 4, 3));
    map.put(cycle(1, 4, 5, 6, 3), cycle(1, 6, 5, 3, 4));
    map.put(cycle(1, 4, 5, 3), cycle(1, 2, 6, 3));
    map.put(cycle(1, 4, 3).compose(cycle(5, 6)), cycle(1, 4, 5, 2, 3, 6));
    map.put(cycle(1, 4, 3), cycle(1, 3, 5).compose(cycle(2, 4, 6)));
    map.put(cycle(1, 4, 5, 3, 6, 2), cycle(1, 6, 4).compose(cycle(2, 5)));
    map.put(cycle(1, 4, 5, 2).compose(cycle(3, 6)), cycle(1, 5, 4, 3).compose(cycle(2, 6)));
    map.put(cycle(1, 4, 3, 6, 2), cycle(1, 4, 5, 3, 2));
    map.put(cycle(1, 4, 3, 6, 5, 2), cycle(2, 4).compose(cycle(3, 5, 6)));
    map.put(cycle(1, 4, 2).compose(cycle(3, 6)), cycle(1, 2, 3, 4, 6, 5));
    map.put(cycle(1, 4, 2).compose(cycle(3, 6, 5)), cycle(1, 3, 6));
    map.put(cycle(1, 4, 6, 2).compose(cycle(3, 5)), cycle(1, 5).compose(cycle(2, 6, 3, 4)));
    map.put(cycle(1, 4, 6, 3, 5, 2), cycle(1, 6).compose(cycle(2, 5, 3)));
    map.put(cycle(1, 4, 3, 5, 6, 2), cycle(1, 3).compose(cycle(4, 6, 5)));
    map.put(cycle(1, 4, 3, 5, 2), cycle(1, 2, 3, 6, 4));
    map.put(cycle(1, 4, 2).compose(cycle(3, 5, 6)), cycle(2, 4, 5));
    map.put(cycle(1, 4, 2).compose(cycle(3, 5)), cycle(1, 4, 3, 5, 6, 2));
    map.put(cycle(1, 4, 6, 2), cycle(2, 4, 3, 6));
    map.put(cycle(1, 4, 6, 5, 2), cycle(1, 4, 6, 5, 2));
    map.put(cycle(1, 4, 5, 6, 2), cycle(1, 2, 3, 5, 6));
    map.put(cycle(1, 4, 5, 2), cycle(1, 3, 4, 5));
    map.put(cycle(1, 4, 2).compose(cycle(5, 6)), cycle(1, 5, 3, 2, 6, 4));
    map.put(cycle(1, 4, 2), cycle(1, 6, 3).compose(cycle(2, 5, 4)));
    map.put(cycle(1, 4, 6, 3, 2), cycle(1, 3, 5, 6, 4));
    map.put(cycle(1, 4, 6, 5, 3, 2), cycle(1, 2, 3).compose(cycle(4, 5)));
    map.put(cycle(1, 4, 5, 6, 3, 2), cycle(1, 4, 2).compose(cycle(3, 6)));
    map.put(cycle(1, 4, 5, 3, 2), cycle(2, 4, 6, 5, 3));
    map.put(cycle(1, 4, 3, 2).compose(cycle(5, 6)), cycle(1, 6, 2, 5).compose(cycle(3, 4)));
    map.put(cycle(1, 4, 3, 2), cycle(1, 5, 2, 6));
    map.put(cycle(1, 3, 5, 2, 6), cycle(1, 5, 2, 3, 6));
    map.put(cycle(1, 3, 5).compose(cycle(2, 6)), cycle(1, 3, 4, 6, 2, 5));
    map.put(cycle(1, 3, 5, 4, 2, 6), cycle(2, 4, 3).compose(cycle(5, 6)));
    map.put(cycle(1, 3, 5).compose(cycle(2, 6, 4)), cycle(1, 4, 2));
    map.put(cycle(1, 3, 5, 4).compose(cycle(2, 6)), cycle(1, 2, 6, 3).compose(cycle(4, 5)));
    map.put(cycle(1, 3, 5, 2, 6, 4), cycle(1, 6, 4).compose(cycle(3, 5)));
    map.put(cycle(1, 3, 4, 5, 2, 6), cycle(1, 3).compose(cycle(2, 5, 4)));
    map.put(cycle(1, 3, 4, 5).compose(cycle(2, 6)), cycle(1, 5, 6, 4).compose(cycle(2, 3)));
    map.put(cycle(1, 3, 4, 2, 6), cycle(1, 6, 3, 4, 5));
    map.put(cycle(1, 3, 4, 2, 6, 5), cycle(1, 2, 6).compose(cycle(3, 5)));
    map.put(cycle(1, 3, 4).compose(cycle(2, 6)), cycle(1, 4, 3, 6, 5, 2));
    map.put(cycle(1, 3, 4).compose(cycle(2, 6, 5)), cycle(2, 4, 6));
    map.put(cycle(1, 3, 2, 6).compose(cycle(4, 5)), cycle(1, 4, 6, 2).compose(cycle(3, 5)));
    map.put(cycle(1, 3, 2, 6, 4, 5), cycle(2, 4, 5).compose(cycle(3, 6)));
    map.put(cycle(1, 3, 2, 6), cycle(1, 2, 6, 4));
    map.put(cycle(1, 3, 2, 6, 5), cycle(1, 6, 5, 4, 3));
    map.put(cycle(1, 3, 2, 6, 4), cycle(1, 3, 2, 5, 6));
    map.put(cycle(1, 3, 2, 6, 5, 4), cycle(1, 5).compose(cycle(2, 3, 4)));
    map.put(cycle(1, 3).compose(cycle(2, 6)).compose(cycle(4, 5)), cycle(1, 6));
    map.put(cycle(1, 3).compose(cycle(2, 6, 4, 5)), cycle(1, 2, 6, 5).compose(cycle(3, 4)));
    map.put(cycle(1, 3).compose(cycle(2, 6)), cycle(2, 4).compose(cycle(3, 5)));
    map.put(cycle(1, 3).compose(cycle(2, 6, 5)), cycle(1, 4, 5, 6, 3, 2));
    map.put(cycle(1, 3).compose(cycle(2, 6, 4)), cycle(1, 5, 4, 6, 2, 3));
    map.put(cycle(1, 3).compose(cycle(2, 6, 5, 4)), cycle(1, 3, 6, 4).compose(cycle(2, 5)));
    map.put(cycle(1, 3, 6).compose(cycle(2, 5)), cycle(1, 6, 2, 4, 3, 5));
    map.put(cycle(1, 3, 6, 2, 5), cycle(1, 4, 5, 2, 6));
    map.put(cycle(1, 3, 6).compose(cycle(2, 5, 4)), cycle(1, 2, 3));
    map.put(cycle(1, 3, 6, 4, 2, 5), cycle(1, 3, 4).compose(cycle(5, 6)));
    map.put(cycle(1, 3, 6, 2, 5, 4), cycle(2, 5, 3).compose(cycle(4, 6)));
    map.put(cycle(1, 3, 6, 4).compose(cycle(2, 5)), cycle(1, 5, 4, 2).compose(cycle(3, 6)));
    map.put(cycle(1, 3, 4, 6).compose(cycle(2, 5)), cycle(1, 4).compose(cycle(2, 6, 5, 3)));
    map.put(cycle(1, 3, 4, 6, 2, 5), cycle(1, 6, 3).compose(cycle(2, 4)));
    map.put(cycle(1, 3, 4, 2, 5, 6), cycle(1, 5, 2).compose(cycle(4, 6)));
    map.put(cycle(1, 3, 4, 2, 5), cycle(2, 5, 4, 3, 6));
    map.put(cycle(1, 3, 4).compose(cycle(2, 5, 6)), cycle(1, 3, 5));
    map.put(cycle(1, 3, 4).compose(cycle(2, 5)), cycle(1, 2, 3, 4, 5, 6));
    map.put(cycle(1, 3, 2, 5, 4, 6), cycle(1, 3, 6).compose(cycle(4, 5)));
    map.put(cycle(1, 3, 2, 5).compose(cycle(4, 6)), cycle(1, 2, 3, 5).compose(cycle(4, 6)));
    map.put(cycle(1, 3, 2, 5, 6), cycle(2, 5, 6, 3, 4));
    map.put(cycle(1, 3, 2, 5), cycle(1, 5, 3, 2));
    map.put(cycle(1, 3, 2, 5, 6, 4), cycle(1, 4, 3).compose(cycle(2, 6)));
    map.put(cycle(1, 3, 2, 5, 4), cycle(1, 6, 5, 2, 4));
    map.put(cycle(1, 3).compose(cycle(2, 5, 4, 6)), cycle(1, 5, 6, 2).compose(cycle(3, 4)));
    map.put(cycle(1, 3).compose(cycle(2, 5)).compose(cycle(4, 6)), cycle(2, 5));
    map.put(cycle(1, 3).compose(cycle(2, 5, 6)), cycle(1, 2, 3, 6, 5, 4));
    map.put(cycle(1, 3).compose(cycle(2, 5)), cycle(1, 3).compose(cycle(4, 6)));
    map.put(cycle(1, 3).compose(cycle(2, 5, 6, 4)), cycle(1, 6).compose(cycle(2, 4, 5, 3)));
    map.put(cycle(1, 3).compose(cycle(2, 5, 4)), cycle(1, 4, 2, 6, 3, 5));
    map.put(cycle(1, 3, 6).compose(cycle(2, 4, 5)), cycle(4, 5, 6));
    map.put(cycle(1, 3, 6, 2, 4, 5), cycle(1, 2).compose(cycle(3, 5, 4)));
    map.put(cycle(1, 3, 6).compose(cycle(2, 4)), cycle(1, 4, 2, 5, 3, 6));
    map.put(cycle(1, 3, 6, 5).compose(cycle(2, 4)), cycle(1, 5).compose(cycle(2, 4, 6, 3)));
    map.put(cycle(1, 3, 6, 2, 4), cycle(1, 6, 2, 3, 4));
    map.put(cycle(1, 3, 6, 5, 2, 4), cycle(1, 3).compose(cycle(2, 6, 5)));
    map.put(cycle(1, 3, 5, 2, 4, 6), cycle(1, 2).compose(cycle(3, 4, 6)));
    map.put(cycle(1, 3, 5).compose(cycle(2, 4, 6)), cycle(3, 6, 5));
    map.put(cycle(1, 3, 5, 6).compose(cycle(2, 4)), cycle(1, 3, 5, 4).compose(cycle(2, 6)));
    map.put(cycle(1, 3, 5).compose(cycle(2, 4)), cycle(1, 6, 4, 5, 2, 3));
    map.put(cycle(1, 3, 5, 6, 2, 4), cycle(1, 5, 6).compose(cycle(2, 4)));
    map.put(cycle(1, 3, 5, 2, 4), cycle(1, 4, 3, 2, 5));
    map.put(cycle(1, 3, 2, 4, 6), cycle(1, 5, 2, 4, 3));
    map.put(cycle(1, 3, 2, 4, 6, 5), cycle(1, 4).compose(cycle(2, 5, 6)));
    map.put(cycle(1, 3, 2, 4, 5, 6), cycle(1, 6, 5).compose(cycle(2, 3)));
    map.put(cycle(1, 3, 2, 4, 5), cycle(1, 3, 4, 2, 6));
    map.put(cycle(1, 3, 2, 4).compose(cycle(5, 6)), cycle(1, 2).compose(cycle(3, 6, 4, 5)));
    map.put(cycle(1, 3, 2, 4), cycle(3, 5, 4, 6));
    map.put(cycle(1, 3).compose(cycle(2, 4, 6)), cycle(1, 3, 2, 6, 4, 5));
    map.put(cycle(1, 3).compose(cycle(2, 4, 6, 5)), cycle(1, 6).compose(cycle(2, 3, 5, 4)));
    map.put(cycle(1, 3).compose(cycle(2, 4, 5, 6)), cycle(1, 4, 6, 3).compose(cycle(2, 5)));
    map.put(cycle(1, 3).compose(cycle(2, 4, 5)), cycle(1, 5, 3, 6, 2, 4));
    map.put(cycle(1, 3).compose(cycle(2, 4)).compose(cycle(5, 6)), cycle(3, 4));
    map.put(cycle(1, 3).compose(cycle(2, 4)), cycle(1, 2).compose(cycle(5, 6)));
    map.put(cycle(1, 3, 6).compose(cycle(4, 5)), cycle(1, 5, 2, 6, 3, 4));
    map.put(cycle(1, 3, 6, 4, 5), cycle(1, 6, 2, 5, 3));
    map.put(cycle(1, 3, 6), cycle(1, 3, 2).compose(cycle(4, 6, 5)));
    map.put(cycle(1, 3, 6, 5), cycle(2, 3, 6, 4));
    map.put(cycle(1, 3, 6, 4), cycle(1, 2, 4, 5));
    map.put(cycle(1, 3, 6, 5, 4), cycle(1, 4, 3, 5, 6));
    map.put(cycle(1, 3, 5, 4, 6), cycle(1, 6, 4, 2, 5));
    map.put(cycle(1, 3, 5).compose(cycle(4, 6)), cycle(1, 5, 4, 3, 2, 6));
    map.put(cycle(1, 3, 5, 6), cycle(1, 4, 5, 3));
    map.put(cycle(1, 3, 5), cycle(1, 2, 4).compose(cycle(3, 5, 6)));
    map.put(cycle(1, 3, 5, 6, 4), cycle(2, 3, 4, 6, 5));
    map.put(cycle(1, 3, 5, 4), cycle(1, 3, 6, 2));
    map.put(cycle(1, 3, 4, 6), cycle(2, 3, 5, 6));
    map.put(cycle(1, 3, 4, 6, 5), cycle(1, 3, 4, 5, 2));
    map.put(cycle(1, 3, 4, 5, 6), cycle(1, 2, 4, 3, 6));
    map.put(cycle(1, 3, 4, 5), cycle(1, 4, 6, 5));
    map.put(cycle(1, 3, 4).compose(cycle(5, 6)), cycle(1, 6, 3, 2, 5, 4));
    map.put(cycle(1, 3, 4), cycle(1, 5, 3).compose(cycle(2, 6, 4)));
    map.put(cycle(1, 3).compose(cycle(4, 6)), cycle(1, 4).compose(cycle(3, 6)));
    map.put(cycle(1, 3).compose(cycle(4, 6, 5)), cycle(1, 2, 4, 6, 5, 3));
    map.put(cycle(1, 3).compose(cycle(4, 5, 6)), cycle(1, 3, 5, 6, 4, 2));
    map.put(cycle(1, 3).compose(cycle(4, 5)), cycle(2, 3).compose(cycle(4, 5)));
    map.put(cycle(1, 3).compose(cycle(5, 6)), cycle(1, 5).compose(cycle(2, 6)));
    map.put(cycle(1, 3), cycle(1, 6).compose(cycle(2, 5)).compose(cycle(3, 4)));
    map.put(cycle(1, 3, 6, 2).compose(cycle(4, 5)), cycle(1, 3, 6, 5).compose(cycle(2, 4)));
    map.put(cycle(1, 3, 6, 4, 5, 2), cycle(1, 4, 6).compose(cycle(2, 3)));
    map.put(cycle(1, 3, 6, 2), cycle(1, 5, 6, 3));
    map.put(cycle(1, 3, 6, 5, 2), cycle(1, 2, 5, 3, 4));
    map.put(cycle(1, 3, 6, 4, 2), cycle(2, 6, 4, 3, 5));
    map.put(cycle(1, 3, 6, 5, 4, 2), cycle(1, 6, 2).compose(cycle(4, 5)));
    map.put(cycle(1, 3, 5, 4, 6, 2), cycle(1, 4).compose(cycle(2, 3, 5)));
    map.put(cycle(1, 3, 5, 2).compose(cycle(4, 6)), cycle(1, 3).compose(cycle(2, 4, 5, 6)));
    map.put(cycle(1, 3, 5, 6, 2), cycle(1, 6, 4, 3, 2));
    map.put(cycle(1, 3, 5, 2), cycle(2, 6, 5, 4));
    map.put(cycle(1, 3, 5, 6, 4, 2), cycle(1, 2, 5).compose(cycle(3, 6)));
    map.put(cycle(1, 3, 5, 4, 2), cycle(1, 5, 3, 4, 6));
    map.put(cycle(1, 3, 4, 6, 2), cycle(1, 2, 5, 4, 6));
    map.put(cycle(1, 3, 4, 6, 5, 2), cycle(1, 5).compose(cycle(3, 6, 4)));
    map.put(cycle(1, 3, 4, 5, 6, 2), cycle(2, 6).compose(cycle(3, 4, 5)));
    map.put(cycle(1, 3, 4, 5, 2), cycle(1, 6, 3, 5, 2));
    map.put(cycle(1, 3, 4, 2).compose(cycle(5, 6)), cycle(1, 4, 2, 3).compose(cycle(5, 6)));
    map.put(cycle(1, 3, 4, 2), cycle(1, 3, 2, 4));
    map.put(cycle(1, 3, 2).compose(cycle(4, 6)), cycle(1, 6, 5, 3, 4, 2));
    map.put(cycle(1, 3, 2).compose(cycle(4, 6, 5)), cycle(2, 6, 3));
    map.put(cycle(1, 3, 2).compose(cycle(4, 5, 6)), cycle(1, 5, 4));
    map.put(cycle(1, 3, 2).compose(cycle(4, 5)), cycle(1, 2, 5, 6, 4, 3));
    map.put(cycle(1, 3, 2).compose(cycle(5, 6)), cycle(1, 3, 5, 2, 4, 6));
    map.put(cycle(1, 3, 2), cycle(1, 4, 5).compose(cycle(2, 3, 6)));
    map.put(cycle(1, 2, 6).compose(cycle(3, 5)), cycle(1, 6, 3, 5, 4, 2));
    map.put(cycle(1, 2, 6, 3, 5), cycle(2, 6, 4, 5, 3));
    map.put(cycle(1, 2, 6).compose(cycle(3, 5, 4)), cycle(1, 3, 4));
    map.put(cycle(1, 2, 6, 4, 3, 5), cycle(1, 2, 3).compose(cycle(5, 6)));
    map.put(cycle(1, 2, 6, 3, 5, 4), cycle(1, 4, 6).compose(cycle(2, 5)));
    map.put(cycle(1, 2, 6, 4).compose(cycle(3, 5)), cycle(1, 5).compose(cycle(2, 4, 3, 6)));
    map.put(cycle(1, 2, 6).compose(cycle(3, 4, 5)), cycle(2, 6, 5));
    map.put(cycle(1, 2, 6, 3, 4, 5), cycle(1, 6, 2).compose(cycle(3, 4)));
    map.put(cycle(1, 2, 6).compose(cycle(3, 4)), cycle(1, 5, 3, 2, 4, 6));
    map.put(cycle(1, 2, 6, 5).compose(cycle(3, 4)), cycle(1, 4, 2, 5).compose(cycle(3, 6)));
    map.put(cycle(1, 2, 6, 3, 4), cycle(1, 2, 3, 5, 4));
    map.put(cycle(1, 2, 6, 5, 3, 4), cycle(1, 3).compose(cycle(4, 5, 6)));
    map.put(cycle(1, 2, 6).compose(cycle(4, 5)), cycle(1, 2, 3, 6, 4, 5));
    map.put(cycle(1, 2, 6, 4, 5), cycle(1, 3, 5, 4, 6));
    map.put(cycle(1, 2, 6), cycle(1, 4, 3).compose(cycle(2, 5, 6)));
    map.put(cycle(1, 2, 6, 5), cycle(1, 5, 2, 4));
    map.put(cycle(1, 2, 6, 4), cycle(2, 6, 3, 4));
    map.put(cycle(1, 2, 6, 5, 4), cycle(1, 6, 5, 3, 2));
    map.put(cycle(1, 2, 6, 3).compose(cycle(4, 5)), cycle(1, 5, 6, 3).compose(cycle(2, 4)));
    map.put(cycle(1, 2, 6, 4, 5, 3), cycle(1, 4).compose(cycle(2, 5, 3)));
    map.put(cycle(1, 2, 6, 3), cycle(1, 3, 6, 5));
    map.put(cycle(1, 2, 6, 5, 3), cycle(1, 2, 3, 4, 6));
    map.put(cycle(1, 2, 6, 4, 3), cycle(1, 6, 4, 5, 2));
    map.put(cycle(1, 2, 6, 5, 4, 3), cycle(2, 6).compose(cycle(3, 5, 4)));
    map.put(cycle(1, 2, 5, 3, 6), cycle(1, 5, 3, 6, 4));
    map.put(cycle(1, 2, 5).compose(cycle(3, 6)), cycle(1, 2, 5, 4, 6, 3));
    map.put(cycle(1, 2, 5, 4, 3, 6), cycle(1, 4, 2).compose(cycle(5, 6)));
    map.put(cycle(1, 2, 5).compose(cycle(3, 6, 4)), cycle(2, 4, 3));
    map.put(cycle(1, 2, 5, 4).compose(cycle(3, 6)), cycle(1, 3, 4, 5).compose(cycle(2, 6)));
    map.put(cycle(1, 2, 5, 3, 6, 4), cycle(1, 6).compose(cycle(2, 3, 5)));
    map.put(cycle(1, 2, 5, 3, 4, 6), cycle(1, 2, 5).compose(cycle(3, 4)));
    map.put(cycle(1, 2, 5).compose(cycle(3, 4, 6)), cycle(1, 5, 6));
    map.put(cycle(1, 2, 5, 6).compose(cycle(3, 4)), cycle(1, 6, 2, 3).compose(cycle(4, 5)));
    map.put(cycle(1, 2, 5).compose(cycle(3, 4)), cycle(1, 3, 5, 2, 6, 4));
    map.put(cycle(1, 2, 5, 6, 3, 4), cycle(2, 4).compose(cycle(3, 6, 5)));
    map.put(cycle(1, 2, 5, 3, 4), cycle(1, 4, 6, 3, 2));
    map.put(cycle(1, 2, 5, 4, 6), cycle(2, 4, 6, 3, 5));
    map.put(cycle(1, 2, 5).compose(cycle(4, 6)), cycle(1, 4, 5, 3, 6, 2));
    map.put(cycle(1, 2, 5, 6), cycle(1, 3, 2, 6));
    map.put(cycle(1, 2, 5), cycle(1, 6, 5).compose(cycle(2, 3, 4)));
    map.put(cycle(1, 2, 5, 6, 4), cycle(1, 2, 5, 6, 4));
    map.put(cycle(1, 2, 5, 4), cycle(1, 5, 4, 3));
    map.put(cycle(1, 2, 5, 4, 6, 3), cycle(1, 6, 4).compose(cycle(2, 3)));
    map.put(cycle(1, 2, 5, 3).compose(cycle(4, 6)), cycle(1, 3).compose(cycle(2, 6, 5, 4)));
    map.put(cycle(1, 2, 5, 6, 3), cycle(1, 4, 3, 5, 2));
    map.put(cycle(1, 2, 5, 3), cycle(2, 4, 5, 6));
    map.put(cycle(1, 2, 5, 6, 4, 3), cycle(1, 5).compose(cycle(3, 4, 6)));
    map.put(cycle(1, 2, 5, 4, 3), cycle(1, 2, 5, 3, 6));
    map.put(cycle(1, 2, 4, 5, 3, 6), cycle(1, 3).compose(cycle(2, 4, 6)));
    map.put(cycle(1, 2, 4, 5).compose(cycle(3, 6)), cycle(1, 4).compose(cycle(2, 3, 6, 5)));
    map.put(cycle(1, 2, 4, 3, 6), cycle(1, 2, 6, 3, 5));
    map.put(cycle(1, 2, 4, 3, 6, 5), cycle(1, 6).compose(cycle(3, 4, 5)));
    map.put(cycle(1, 2, 4).compose(cycle(3, 6)), cycle(1, 5, 6, 4, 3, 2));
    map.put(cycle(1, 2, 4).compose(cycle(3, 6, 5)), cycle(2, 5, 4));
    map.put(cycle(1, 2, 4, 6).compose(cycle(3, 5)), cycle(1, 4, 5, 6).compose(cycle(2, 3)));
    map.put(cycle(1, 2, 4, 6, 3, 5), cycle(1, 3, 5).compose(cycle(2, 4)));
    map.put(cycle(1, 2, 4, 3, 5, 6), cycle(2, 5).compose(cycle(3, 6, 4)));
    map.put(cycle(1, 2, 4, 3, 5), cycle(1, 5, 4, 6, 2));
    map.put(cycle(1, 2, 4).compose(cycle(3, 5, 6)), cycle(1, 6, 3));
    map.put(cycle(1, 2, 4).compose(cycle(3, 5)), cycle(1, 2, 6, 5, 3, 4));
    map.put(cycle(1, 2, 4, 6), cycle(1, 6, 5, 4));
    map.put(cycle(1, 2, 4, 6, 5), cycle(1, 2, 6, 4, 3));
    map.put(cycle(1, 2, 4, 5, 6), cycle(1, 5, 3, 4, 2));
    map.put(cycle(1, 2, 4, 5), cycle(2, 5, 6, 3));
    map.put(cycle(1, 2, 4).compose(cycle(5, 6)), cycle(1, 4, 6, 2, 3, 5));
    map.put(cycle(1, 2, 4), cycle(1, 3, 6).compose(cycle(2, 4, 5)));
    map.put(cycle(1, 2, 4, 6, 3), cycle(2, 5, 3, 4, 6));
    map.put(cycle(1, 2, 4, 6, 5, 3), cycle(1, 5, 2).compose(cycle(3, 6)));
    map.put(cycle(1, 2, 4, 5, 6, 3), cycle(1, 2, 6).compose(cycle(4, 5)));
    map.put(cycle(1, 2, 4, 5, 3), cycle(1, 6, 4, 3, 5));
    map.put(cycle(1, 2, 4, 3).compose(cycle(5, 6)), cycle(1, 3, 2, 4).compose(cycle(5, 6)));
    map.put(cycle(1, 2, 4, 3), cycle(1, 4, 2, 3));
    map.put(cycle(1, 2, 3, 6).compose(cycle(4, 5)), cycle(1, 6).compose(cycle(2, 5, 4, 3)));
    map.put(cycle(1, 2, 3, 6, 4, 5), cycle(1, 5).compose(cycle(2, 6, 4)));
    map.put(cycle(1, 2, 3, 6), cycle(2, 3, 4, 5));
    map.put(cycle(1, 2, 3, 6, 5), cycle(1, 3, 5, 6, 2));
    map.put(cycle(1, 2, 3, 6, 4), cycle(1, 4, 6, 5, 3));
    map.put(cycle(1, 2, 3, 6, 5, 4), cycle(1, 2, 4).compose(cycle(3, 6)));
    map.put(cycle(1, 2, 3, 5, 4, 6), cycle(1, 5, 3).compose(cycle(2, 6)));
    map.put(cycle(1, 2, 3, 5).compose(cycle(4, 6)), cycle(1, 6, 3, 4).compose(cycle(2, 5)));
    map.put(cycle(1, 2, 3, 5, 6), cycle(1, 2, 4, 6, 5));
    map.put(cycle(1, 2, 3, 5), cycle(1, 4, 3, 6));
    map.put(cycle(1, 2, 3, 5, 6, 4), cycle(1, 3, 2).compose(cycle(4, 5)));
    map.put(cycle(1, 2, 3, 5, 4), cycle(2, 3, 5, 6, 4));
    map.put(cycle(1, 2, 3, 4, 6), cycle(1, 3, 6, 4, 2));
    map.put(cycle(1, 2, 3, 4, 6, 5), cycle(2, 3).compose(cycle(4, 6, 5)));
    map.put(cycle(1, 2, 3, 4, 5, 6), cycle(1, 4).compose(cycle(3, 5, 6)));
    map.put(cycle(1, 2, 3, 4, 5), cycle(1, 2, 4, 5, 3));
    map.put(cycle(1, 2, 3, 4).compose(cycle(5, 6)), cycle(1, 5, 2, 6).compose(cycle(3, 4)));
    map.put(cycle(1, 2, 3, 4), cycle(1, 6, 2, 5));
    map.put(cycle(1, 2, 3).compose(cycle(4, 6)), cycle(1, 2, 4, 3, 5, 6));
    map.put(cycle(1, 2, 3).compose(cycle(4, 6, 5)), cycle(1, 4, 5));
    map.put(cycle(1, 2, 3).compose(cycle(4, 5, 6)), cycle(2, 3, 6));
    map.put(cycle(1, 2, 3).compose(cycle(4, 5)), cycle(1, 3, 4, 6, 5, 2));
    map.put(cycle(1, 2, 3).compose(cycle(5, 6)), cycle(1, 6, 4, 2, 5, 3));
    map.put(cycle(1, 2, 3), cycle(1, 5, 4).compose(cycle(2, 6, 3)));
    map.put(cycle(1, 2).compose(cycle(3, 6)).compose(cycle(4, 5)), cycle(3, 5));
    map.put(cycle(1, 2).compose(cycle(3, 6, 4, 5)), cycle(1, 2).compose(cycle(3, 4, 5, 6)));
    map.put(cycle(1, 2).compose(cycle(3, 6)), cycle(1, 6).compose(cycle(2, 4)));
    map.put(cycle(1, 2).compose(cycle(3, 6, 5)), cycle(1, 4, 3, 2, 6, 5));
    map.put(cycle(1, 2).compose(cycle(3, 6, 4)), cycle(1, 3, 6, 2, 5, 4));
    map.put(cycle(1, 2).compose(cycle(3, 6, 5, 4)), cycle(1, 5, 2, 3).compose(cycle(4, 6)));
    map.put(cycle(1, 2).compose(cycle(3, 5, 4, 6)), cycle(1, 2).compose(cycle(3, 6, 5, 4)));
    map.put(cycle(1, 2).compose(cycle(3, 5)).compose(cycle(4, 6)), cycle(4, 6));
    map.put(cycle(1, 2).compose(cycle(3, 5, 6)), cycle(1, 5, 6, 2, 3, 4));
    map.put(cycle(1, 2).compose(cycle(3, 5)), cycle(1, 3).compose(cycle(2, 5)));
    map.put(cycle(1, 2).compose(cycle(3, 5, 6, 4)), cycle(1, 4, 2, 6).compose(cycle(3, 5)));
    map.put(cycle(1, 2).compose(cycle(3, 5, 4)), cycle(1, 6, 3, 2, 4, 5));
    map.put(cycle(1, 2).compose(cycle(3, 4, 6)), cycle(1, 4, 5, 2, 6, 3));
    map.put(cycle(1, 2).compose(cycle(3, 4, 6, 5)), cycle(1, 6, 2, 4).compose(cycle(3, 5)));
    map.put(cycle(1, 2).compose(cycle(3, 4, 5, 6)), cycle(1, 3, 2, 5).compose(cycle(4, 6)));
    map.put(cycle(1, 2).compose(cycle(3, 4, 5)), cycle(1, 5, 4, 2, 3, 6));
    map.put(cycle(1, 2).compose(cycle(3, 4)).compose(cycle(5, 6)), cycle(1, 2));
    map.put(cycle(1, 2).compose(cycle(3, 4)), cycle(3, 4).compose(cycle(5, 6)));
    map.put(cycle(1, 2).compose(cycle(4, 6)), cycle(1, 5).compose(cycle(2, 3)));
    map.put(cycle(1, 2).compose(cycle(4, 6, 5)), cycle(1, 3, 4, 2, 5, 6));
    map.put(cycle(1, 2).compose(cycle(4, 5, 6)), cycle(1, 6, 5, 2, 4, 3));
    map.put(cycle(1, 2).compose(cycle(4, 5)), cycle(1, 4).compose(cycle(2, 6)));
    map.put(cycle(1, 2).compose(cycle(5, 6)), cycle(3, 6).compose(cycle(4, 5)));
    map.put(cycle(1, 2), cycle(1, 2).compose(cycle(3, 5)).compose(cycle(4, 6)));
    map.put(cycle(2, 6).compose(cycle(3, 5)), cycle(1, 4).compose(cycle(5, 6)));
    map.put(cycle(2, 6, 3, 5), cycle(1, 2, 4, 3));
    map.put(cycle(2, 6).compose(cycle(3, 5, 4)), cycle(1, 5, 3, 6, 4, 2));
    map.put(cycle(2, 6, 4, 3, 5), cycle(2, 5, 4, 6, 3));
    map.put(cycle(2, 6, 3, 5, 4), cycle(1, 6, 2, 3, 5));
    map.put(cycle(2, 6, 4).compose(cycle(3, 5)), cycle(1, 3, 4, 5, 2, 6));
    map.put(cycle(2, 6).compose(cycle(3, 4, 5)), cycle(1, 2, 4, 6, 3, 5));
    map.put(cycle(2, 6, 3, 4, 5), cycle(1, 4, 5, 3, 6));
    map.put(cycle(2, 6).compose(cycle(3, 4)), cycle(1, 3).compose(cycle(2, 6)));
    map.put(cycle(2, 6, 5).compose(cycle(3, 4)), cycle(1, 6, 5, 2, 3, 4));
    map.put(cycle(2, 6, 3, 4), cycle(2, 5, 6, 4));
    map.put(cycle(2, 6, 5, 3, 4), cycle(1, 5, 4, 3, 2));
    map.put(cycle(2, 6).compose(cycle(4, 5)), cycle(2, 5).compose(cycle(3, 4)));
    map.put(cycle(2, 6, 4, 5), cycle(1, 5, 6, 2));
    map.put(cycle(2, 6), cycle(1, 6).compose(cycle(2, 3)).compose(cycle(4, 5)));
    map.put(cycle(2, 6, 5), cycle(1, 3, 5).compose(cycle(2, 6, 4)));
    map.put(cycle(2, 6, 4), cycle(1, 2, 4).compose(cycle(3, 6, 5)));
    map.put(cycle(2, 6, 5, 4), cycle(1, 4, 6, 3));
    map.put(cycle(2, 6, 3).compose(cycle(4, 5)), cycle(1, 3, 2, 6, 5, 4));
    map.put(cycle(2, 6, 4, 5, 3), cycle(1, 6, 4, 2, 3));
    map.put(cycle(2, 6, 3), cycle(1, 5, 2).compose(cycle(3, 4, 6)));
    map.put(cycle(2, 6, 5, 3), cycle(2, 5, 3, 6));
    map.put(cycle(2, 6, 4, 3), cycle(1, 4, 3, 5));
    map.put(cycle(2, 6, 5, 4, 3), cycle(1, 2, 4, 5, 6));
    map.put(cycle(2, 5, 3, 6), cycle(1, 3, 4, 2));
    map.put(cycle(2, 5).compose(cycle(3, 6)), cycle(2, 3).compose(cycle(5, 6)));
    map.put(cycle(2, 5, 4, 3, 6), cycle(1, 6, 3, 5, 4));
    map.put(cycle(2, 5).compose(cycle(3, 6, 4)), cycle(1, 2, 6, 4, 5, 3));
    map.put(cycle(2, 5, 4).compose(cycle(3, 6)), cycle(1, 5, 2, 4, 3, 6));
    map.put(cycle(2, 5, 3, 6, 4), cycle(1, 4, 6, 2, 5));
    map.put(cycle(2, 5, 3, 4, 6), cycle(2, 3, 6, 4, 5));
    map.put(cycle(2, 5).compose(cycle(3, 4, 6)), cycle(1, 3, 5, 4, 6, 2));
    map.put(cycle(2, 5, 6).compose(cycle(3, 4)), cycle(1, 4, 3, 2, 5, 6));
    map.put(cycle(2, 5).compose(cycle(3, 4)), cycle(1, 5).compose(cycle(2, 4)));
    map.put(cycle(2, 5, 6, 3, 4), cycle(1, 2, 6, 3, 4));
    map.put(cycle(2, 5, 3, 4), cycle(1, 6, 5, 3));
    map.put(cycle(2, 5, 4, 6), cycle(1, 2, 6, 5));
    map.put(cycle(2, 5).compose(cycle(4, 6)), cycle(1, 6).compose(cycle(3, 4)));
    map.put(cycle(2, 5, 6), cycle(1, 5, 3).compose(cycle(2, 4, 6)));
    map.put(cycle(2, 5), cycle(1, 4).compose(cycle(2, 5)).compose(cycle(3, 6)));
    map.put(cycle(2, 5, 6, 4), cycle(2, 3, 5, 4));
    map.put(cycle(2, 5, 4), cycle(1, 3, 2).compose(cycle(4, 5, 6)));
    map.put(cycle(2, 5, 4, 6, 3), cycle(1, 4, 2, 5, 3));
    map.put(cycle(2, 5, 3).compose(cycle(4, 6)), cycle(1, 5, 6, 3, 2, 4));
    map.put(cycle(2, 5, 6, 3), cycle(1, 6, 4, 5));
    map.put(cycle(2, 5, 3), cycle(1, 2, 6).compose(cycle(3, 5, 4)));
    map.put(cycle(2, 5, 6, 4, 3), cycle(1, 3, 6, 5, 2));
    map.put(cycle(2, 5, 4, 3), cycle(2, 3, 4, 6));
    map.put(cycle(2, 4, 5, 3, 6), cycle(1, 5, 3, 2, 6));
    map.put(cycle(2, 4, 5).compose(cycle(3, 6)), cycle(1, 6, 3, 4, 2, 5));
    map.put(cycle(2, 4, 3, 6), cycle(2, 4, 6, 5));
    map.put(cycle(2, 4, 3, 6, 5), cycle(1, 4, 3, 6, 2));
    map.put(cycle(2, 4).compose(cycle(3, 6)), cycle(1, 3).compose(cycle(4, 5)));
    map.put(cycle(2, 4).compose(cycle(3, 6, 5)), cycle(1, 2, 3, 5, 6, 4));
    map.put(cycle(2, 4, 6).compose(cycle(3, 5)), cycle(1, 6, 2, 5, 4, 3));
    map.put(cycle(2, 4, 6, 3, 5), cycle(1, 5, 2, 6, 4));
    map.put(cycle(2, 4, 3, 5, 6), cycle(1, 2, 3, 4, 5));
    map.put(cycle(2, 4, 3, 5), cycle(1, 3, 5, 6));
    map.put(cycle(2, 4).compose(cycle(3, 5, 6)), cycle(1, 4, 6, 5, 3, 2));
    map.put(cycle(2, 4).compose(cycle(3, 5)), cycle(2, 4).compose(cycle(3, 6)));
    map.put(cycle(2, 4, 6), cycle(1, 4, 2).compose(cycle(3, 5, 6)));
    map.put(cycle(2, 4, 6, 5), cycle(2, 4, 5, 3));
    map.put(cycle(2, 4, 5, 6), cycle(1, 3, 6, 4));
    map.put(cycle(2, 4, 5), cycle(1, 2, 3).compose(cycle(4, 6, 5)));
    map.put(cycle(2, 4).compose(cycle(5, 6)), cycle(1, 6).compose(cycle(2, 5)));
    map.put(cycle(2, 4), cycle(1, 5).compose(cycle(2, 6)).compose(cycle(3, 4)));
    map.put(cycle(2, 4, 6, 3), cycle(1, 2, 3, 6));
    map.put(cycle(2, 4, 6, 5, 3), cycle(1, 3, 4, 6, 5));
    map.put(cycle(2, 4, 5, 6, 3), cycle(2, 4, 3, 5, 6));
    map.put(cycle(2, 4, 5, 3), cycle(1, 4, 5, 2));
    map.put(cycle(2, 4, 3).compose(cycle(5, 6)), cycle(1, 5, 4, 2, 6, 3));
    map.put(cycle(2, 4, 3), cycle(1, 6, 4).compose(cycle(2, 5, 3)));
    map.put(cycle(2, 3, 6).compose(cycle(4, 5)), cycle(1, 4, 5, 6, 2, 3));
    map.put(cycle(2, 3, 6, 4, 5), cycle(1, 3, 5, 2, 4));
    map.put(cycle(2, 3, 6), cycle(1, 2, 5).compose(cycle(3, 6, 4)));
    map.put(cycle(2, 3, 6, 5), cycle(1, 5, 4, 6));
    map.put(cycle(2, 3, 6, 4), cycle(1, 6, 3, 2));
    map.put(cycle(2, 3, 6, 5, 4), cycle(2, 6, 5, 3, 4));
    map.put(cycle(2, 3, 5, 4, 6), cycle(1, 3, 2, 4, 6));
    map.put(cycle(2, 3, 5).compose(cycle(4, 6)), cycle(1, 4, 2, 3, 6, 5));
    map.put(cycle(2, 3, 5, 6), cycle(2, 6, 3, 5));
    map.put(cycle(2, 3, 5), cycle(1, 6, 2).compose(cycle(3, 4, 5)));
    map.put(cycle(2, 3, 5, 6, 4), cycle(1, 5, 6, 4, 3));
    map.put(cycle(2, 3, 5, 4), cycle(1, 2, 5, 4));
    map.put(cycle(2, 3, 4, 6), cycle(1, 5, 3, 4));
    map.put(cycle(2, 3, 4, 6, 5), cycle(1, 2, 5, 6, 3));
    map.put(cycle(2, 3, 4, 5, 6), cycle(1, 6, 5, 4, 2));
    map.put(cycle(2, 3, 4, 5), cycle(2, 6, 4, 3));
    map.put(cycle(2, 3, 4).compose(cycle(5, 6)), cycle(1, 3, 6, 2, 4, 5));
    map.put(cycle(2, 3, 4), cycle(1, 4, 6).compose(cycle(2, 3, 5)));
    map.put(cycle(2, 3).compose(cycle(4, 6)), cycle(2, 6).compose(cycle(4, 5)));
    map.put(cycle(2, 3).compose(cycle(4, 6, 5)), cycle(1, 6, 4, 3, 5, 2));
    map.put(cycle(2, 3).compose(cycle(4, 5, 6)), cycle(1, 2, 5, 3, 4, 6));
    map.put(cycle(2, 3).compose(cycle(4, 5)), cycle(1, 5).compose(cycle(3, 6)));
    map.put(cycle(2, 3).compose(cycle(5, 6)), cycle(1, 4).compose(cycle(2, 3)));
    map.put(cycle(2, 3), cycle(1, 3).compose(cycle(2, 4)).compose(cycle(5, 6)));
    map.put(cycle(3, 6).compose(cycle(4, 5)), cycle(1, 2).compose(cycle(4, 6)));
    map.put(cycle(3, 6, 4, 5), cycle(3, 6, 5, 4));
    map.put(cycle(3, 6), cycle(1, 4).compose(cycle(2, 6)).compose(cycle(3, 5)));
    map.put(cycle(3, 6, 5), cycle(1, 6, 3).compose(cycle(2, 4, 5)));
    map.put(cycle(3, 6, 4), cycle(1, 5, 6).compose(cycle(2, 3, 4)));
    map.put(cycle(3, 6, 5, 4), cycle(1, 3, 2, 5));
    map.put(cycle(3, 5, 4, 6), cycle(3, 4, 5, 6));
    map.put(cycle(3, 5).compose(cycle(4, 6)), cycle(1, 2).compose(cycle(3, 5)));
    map.put(cycle(3, 5, 6), cycle(1, 3, 6).compose(cycle(2, 5, 4)));
    map.put(cycle(3, 5), cycle(1, 5).compose(cycle(2, 3)).compose(cycle(4, 6)));
    map.put(cycle(3, 5, 6, 4), cycle(1, 6, 2, 4));
    map.put(cycle(3, 5, 4), cycle(1, 4, 3).compose(cycle(2, 6, 5)));
    map.put(cycle(3, 4, 6), cycle(1, 6, 5).compose(cycle(2, 4, 3)));
    map.put(cycle(3, 4, 6, 5), cycle(1, 4, 2, 6));
    map.put(cycle(3, 4, 5, 6), cycle(1, 5, 2, 3));
    map.put(cycle(3, 4, 5), cycle(1, 3, 4).compose(cycle(2, 5, 6)));
    map.put(cycle(3, 4).compose(cycle(5, 6)), cycle(3, 5).compose(cycle(4, 6)));
    map.put(cycle(3, 4), cycle(1, 2).compose(cycle(3, 6)).compose(cycle(4, 5)));
    map.put(cycle(4, 6), cycle(1, 3).compose(cycle(2, 5)).compose(cycle(4, 6)));
    map.put(cycle(4, 6, 5), cycle(1, 5, 4).compose(cycle(2, 3, 6)));
    map.put(cycle(4, 5, 6), cycle(1, 4, 5).compose(cycle(2, 6, 3)));
    map.put(cycle(4, 5), cycle(1, 6).compose(cycle(2, 4)).compose(cycle(3, 5)));
    map.put(cycle(5, 6), cycle(1, 2).compose(cycle(3, 4)).compose(cycle(5, 6)));
    map.put(Permutation.identity(), Permutation.identity());
    return map;
  }
}
